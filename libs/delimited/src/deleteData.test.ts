import fs from 'fs';
import { deleteData } from './deleteData';

// need some delimited parsed data to test
const msg = JSON.parse(fs.readFileSync('./samples/delimited.json', 'utf8'));

const testCases: Record<string, [path: string, expected: string[][]]> = {
  cell: [
    'A0',
    [
      ['Bar', 'Baz 42'],
      ['1', '2', '3'],
      ['4', '5', '6', '7'],
      ['8', '9'],
      ['10', '11', '12'],
      ['13', '14', '15'],
      ['16', '17', '18'],
      ['19', '20', '21'],
      ['22', '23', '24'],
      ['25', '26', '27'],
      ['28', '29', '30'],
    ],
  ],
  midCell: [
    'B4',
    [
      ['Foo', 'Bar', 'Baz 42'],
      ['1', '2', '3'],
      ['4', '5', '6', '7'],
      ['8', '9'],
      ['10', '12'],
      ['13', '14', '15'],
      ['16', '17', '18'],
      ['19', '20', '21'],
      ['22', '23', '24'],
      ['25', '26', '27'],
      ['28', '29', '30'],
    ],
  ],
  firstRow: [
    '0',
    [
      ['1', '2', '3'],
      ['4', '5', '6', '7'],
      ['8', '9'],
      ['10', '11', '12'],
      ['13', '14', '15'],
      ['16', '17', '18'],
      ['19', '20', '21'],
      ['22', '23', '24'],
      ['25', '26', '27'],
      ['28', '29', '30'],
    ],
  ],
  lastRow: [
    '10',
    [
      ['Foo', 'Bar', 'Baz 42'],
      ['1', '2', '3'],
      ['4', '5', '6', '7'],
      ['8', '9'],
      ['10', '11', '12'],
      ['13', '14', '15'],
      ['16', '17', '18'],
      ['19', '20', '21'],
      ['22', '23', '24'],
      ['25', '26', '27'],
    ],
  ],
  midRow: [
    '1',
    [
      ['Foo', 'Bar', 'Baz 42'],
      ['4', '5', '6', '7'],
      ['8', '9'],
      ['10', '11', '12'],
      ['13', '14', '15'],
      ['16', '17', '18'],
      ['19', '20', '21'],
      ['22', '23', '24'],
      ['25', '26', '27'],
      ['28', '29', '30'],
    ],
  ],
  emptyRow: [
    '11',
    [
      ['Foo', 'Bar', 'Baz 42'],
      ['1', '2', '3'],
      ['4', '5', '6', '7'],
      ['8', '9'],
      ['10', '11', '12'],
      ['13', '14', '15'],
      ['16', '17', '18'],
      ['19', '20', '21'],
      ['22', '23', '24'],
      ['25', '26', '27'],
      ['28', '29', '30'],
    ],
  ],
  rowRange: [
    '1-9',
    [
      ['Foo', 'Bar', 'Baz 42'],
      ['28', '29', '30'],
    ],
  ],
  greaterThanRow: ['>0', [['Foo', 'Bar', 'Baz 42']]],
  plusRow: ['1+', [['Foo', 'Bar', 'Baz 42']]],
  minusRow: ['-10', [['Foo', 'Bar', 'Baz 42']]],
  lessThanRow: [
    '<1',
    [
      ['1', '2', '3'],
      ['4', '5', '6', '7'],
      ['8', '9'],
      ['10', '11', '12'],
      ['13', '14', '15'],
      ['16', '17', '18'],
      ['19', '20', '21'],
      ['22', '23', '24'],
      ['25', '26', '27'],
      ['28', '29', '30'],
    ],
  ],
  firstColumn: [
    'A',
    [
      ['Bar', 'Baz 42'],
      ['2', '3'],
      ['5', '6', '7'],
      ['9'],
      ['11', '12'],
      ['14', '15'],
      ['17', '18'],
      ['20', '21'],
      ['23', '24'],
      ['26', '27'],
      ['29', '30'],
    ],
  ],
  lastColumn: [
    'D',
    [
      ['Foo', 'Bar', 'Baz 42'],
      ['1', '2', '3'],
      ['4', '5', '6'],
      ['8', '9'],
      ['10', '11', '12'],
      ['13', '14', '15'],
      ['16', '17', '18'],
      ['19', '20', '21'],
      ['22', '23', '24'],
      ['25', '26', '27'],
      ['28', '29', '30'],
    ],
  ],
  emptyColumn: [
    'F',
    [
      ['Foo', 'Bar', 'Baz 42'],
      ['1', '2', '3'],
      ['4', '5', '6', '7'],
      ['8', '9'],
      ['10', '11', '12'],
      ['13', '14', '15'],
      ['16', '17', '18'],
      ['19', '20', '21'],
      ['22', '23', '24'],
      ['25', '26', '27'],
      ['28', '29', '30'],
    ],
  ],
  range: [
    'B1-C4',
    [
      ['Foo', 'Bar', 'Baz 42'],
      ['1'],
      [],
      ['13', '14', '15'],
      ['16', '17', '18'],
      ['19', '20', '21'],
      ['22', '23', '24'],
      ['25', '26', '27'],
      ['28', '29', '30'],
    ],
  ],
  rowMatrix: [
    'B1:C4',
    [
      ['Foo', 'Bar', 'Baz 42'],
      ['1'],
      ['4', '7'],
      ['8'],
      ['10'],
      ['13', '14', '15'],
      ['16', '17', '18'],
      ['19', '20', '21'],
      ['22', '23', '24'],
      ['25', '26', '27'],
      ['28', '29', '30'],
    ],
  ],
  columnMatrix: [
    'B1|C4',
    [
      ['Foo', 'Bar', 'Baz 42'],
      ['1'],
      ['4', '7'],
      ['8'],
      ['10'],
      ['13', '14', '15'],
      ['16', '17', '18'],
      ['19', '20', '21'],
      ['22', '23', '24'],
      ['25', '26', '27'],
      ['28', '29', '30'],
    ],
  ],
  columnRange: [
    'B-C',
    [
      ['Foo'],
      ['1'],
      ['4', '7'],
      ['8'],
      ['10'],
      ['13'],
      ['16'],
      ['19'],
      ['22'],
      ['25'],
      ['28'],
    ],
  ],
};

Object.entries(testCases).forEach(([name, [path, expected]]) => {
  test(`deleteData.${name}.${path}`, () => {
    expect(deleteData(msg, path)).toEqual(expected);
  });
});
